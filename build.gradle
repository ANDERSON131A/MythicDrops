import java.time.LocalDateTime

buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:3.1.0'
        classpath 'gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.13.1'
    }
}

allprojects {
    apply plugin: 'com.github.hierynomus.license'
    apply plugin: 'nebula.provided-base'
    apply plugin: 'maven'

    group = 'com.tealcubegames.minecraft.spigot'
    version = '5.0.0-SNAPSHOT'

    license {
        header rootProject.file('HEADER')
        ext.owner = 'Richard Harrah <topplethenunnery@gmail.com>'
        ext.year = getYearString()
    }
}

subprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    repositories {
        mavenLocal()

        maven { url 'https://hub.spigotmc.org/nexus/content/groups/public' }
        maven { url 'http://maven.tealcube.com/content/groups/public' }
        maven { url 'http://repo.mcstats.org/content/groups/public' }
        maven { url 'http://repo.maven.apache.org/maven2' }
    }

    dependencies {
        compile group: 'org.spigotmc', name: 'spigot-api', version: '1.10.2-R0.1-SNAPSHOT'
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
        compile group: 'ch.qos.logback', name: 'logback-core', version: '1.1.7'
        compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
        compile group: 'com.google.inject', name: 'guice', version: '4.1.0'
        compile group: 'com.google.inject.extensions', name: 'guice-assistedinject', version: '4.1.0'
        testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.0.0-M2'
        testCompile group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '4.12.0-M2'
        testCompile group: 'org.mockito', name: 'mockito-core', version: '2.1.0-RC.1'
        testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '1.6.5'
        testCompile group: 'org.powermock', name: 'powermock-api-mockito2', version: '1.6.5'
    }
}

static def getYearString() {
    def inceptionYear = 2016
    def curYear = LocalDateTime.now().getYear()
    return curYear == inceptionYear ? "${curYear}" : "${inceptionYear} - ${curYear}"
}